name: Build OnePlus 13 / Ace 5 Pro / Ace 5 SukiSU Ultra + SUSFS
on:
  workflow_dispatch:
    inputs:
      CPU:
        type: choice
        description: "Nền tảng"
        required: true
        default: 'sm8750'
        options: 
         - sm8750
         - sm8650
      FEIL:
        type: choice
        description: "Model"
        required: true
        default: 'oneplus_13'
        options: 
         - oneplus_13
         - oneplus_13t
         - oneplus_ace5_pro
         - oneplus_ace5
      CPUD:
        type: choice
        description: "Mã điện thoại"
        required: true
        default: 'sun'
        options: 
         - sun
         - pineapple
      ANDROID_VERSION:
        type: choice
        description: "Hệ điều hành"
        required: true
        default: 'android15'
        options: 
         - android15
         - android14
      KERNEL_VERSION:
        type: choice
        description: "Phiên bản kernel"
        required: true
        default: '6.6'
        options: 
         - 6.6
         - 6.1
      KERNEL_NAME:
        description: "Tên kernel"
        required: true
        default: '-android15-Giang-TechsReview'
      KERNEL_TIME:
       description: "Ngày build kernel"
       required: true
       default: '2025-05-20 23:36:49 UTC'
      enable_feature_x:
       description: "Tích hợp KPM"
       required: false
       default: true
       type: boolean
      enable_feature_y:
       description: "Tích hợp LZ4KD"
       required: false
       default: true
       type: boolean
      enable_feature_z:
       description: "Tích hợp Fengchi"
       required: false
       default: true
       type: boolean

jobs:
  OnePlus-Kernel-Build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "giang"
         git config --global user.email "dasklney@giang.us"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl libelf-dev lld

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         
      - name: Set up SukiSU
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
      - name: Set up susfs
        run: |
           cd kernel_workspace
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
           git clone https://github.com/ShirkNeko/SukiSU_patch.git

           cd kernel_platform        
           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           #lz4k
           cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux
           cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib
           cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto
           cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/
           # Apply patches
           cd ./common

           if [ ${{ github.event.inputs.FEIL }} == "oneplus_13" || ${{ github.event.inputs.FEIL }} == "oneplus_13_v"  ]; then
             sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
             sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
           fi

           patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
           cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
           patch -p1 -F 3 < syscall_hooks.patch
           echo "完成"

      - name: Apply HMBird GKI patch
        if: ${{ github.event.inputs.FEIL == 'oneplus_ace5_pro' }}
        run: |
         cd kernel_workspace/kernel_platform/common/drivers
         cat << 'EOF' > hmbird_patch.c
         #include <linux/init.h>
         #include <linux/module.h>
         #include <linux/of.h>
         #include <linux/slab.h>
         #include <linux/string.h>

         static int hmbird_read_version_type(void)
         +{
         +	struct device_node *node;
         +	const char *type_str;
         +	int ret = -EINVAL;
         +
         +	/* Find the oplus,hmbird node in device tree */
         +	node = of_find_node_by_path("/soc/oplus,hmbird");
         +	if (!node) {
         +		pr_info("hmbird: No oplus,hmbird node found in device tree\n");
         +		return ret;
         +	}
         +
         +	/* Read the version_type/type property */
         +	ret = of_property_read_string(of_get_child_by_name(node, "version_type"), 
         +				"type", &type_str);
         +	if (ret) {
         +		pr_info("hmbird: Failed to read version_type/type from device tree\n");
         +		of_node_put(node);
         +		return ret;
         +	}
         +
         +	/* Store the version type */
         +	strlcpy(hmbird_version_type, type_str, sizeof(hmbird_version_type));
         +	pr_info("hmbird: Version type from device tree: %s\n", hmbird_version_type);
         +	
         +	of_node_put(node);
         +	return 0;
         +}
         +
         +EXPORT_SYMBOL(hmbird_check_version_type);
 
         static int set_proc_buf_val(struct file *file, const char __user *buf, size_t count, int *val)
         {
         @@ -376,7 +432,15 @@ static int hmbird_proc_init(void)
 
         static int __init hmbird_common_init(void)
         {
         +	int ret;
         +	
         +	/* Read hmbird version type from device tree */
         +	ret = hmbird_read_version_type();
         +	if (ret) {
         +		pr_warn("hmbird: Failed to read version type from device tree, defaulting to non-GKI\n");
         +		/* Default to HMBIRD_OGKI if we can't read from device tree */
         +		 strlcpy(hmbird_version_type, "HMBIRD_OGKI", sizeof(hmbird_version_type));
         +	}
         +	
            return hmbird_proc_init();
         }
         if ! grep -q "hmbird_patch.o" Makefile; then
         echo "obj-y += hmbird_patch.o" >> Makefile
         fi
         cd ../../../
         git add -A
         git commit -m "Add HMBird GKI patch" || true

 

      - name: Apply lz4kd Patches
        if: ${{ inputs.enable_feature_y == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
            cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
            patch -p1 -F 3 < lz4kd.patch || true
           
      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          #Remove check_defconfig
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel"
      
      - name: Add KPM Configuration Settings
        if: ${{ inputs.enable_feature_x == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
         
          #Remove check_defconfig
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel"
          
      - name: Add kernel custom name
        run: |
         #cd kernel_workspace/kernel_platform
         #sed -i 's/res="\$res\$(cat "\$file")"/res="-android15-8-g013ec21bba94-abogki383916444"/g' ./common/scripts/setlocalversion
         #sudo sed -i 's/-android15-8-g013ec21bba94-abogki383916444/${{ github.event.inputs.KERNEL_NAME }}/g' ./common/scripts/setlocalversion
         cd kernel_workspace/kernel_platform/common/scripts
         echo | sudo tee setlocalversion
         sudo echo "echo "${{ github.event.inputs.KERNEL_NAME }}"" >> setlocalversion

      - name: Add Fengchi
        if: ${{inputs.enable_feature_z == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/HanKuCha/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git
         cd common/kernel/sched
         
      - name: Set Kernel build timestamp
        run: |
          export SOURCE_DATE_EPOCH=$(date -d "${{ github.event.inputs.KERNEL_TIME }}" +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH" >> $GITHUB_ENV
          
      - name: Build Kernel
        run: |
           export SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH}
           #if [ ${{ github.event.inputs.FEIL }} == "oneplus_ace5_pro"]; then
           #  export PATH="/home/runner/work/${{ github.jobs[github.job].name }}/${{ github.jobs[github.job].name }}/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
           #  cd kernel_workspace/kernel_platform/common
           #  make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld  HOSTLD=ld.lld O=out KCFLAGS+=-Wno-error gki_defconfig all
           #else
           cd kernel_workspace/kernel_platform
           tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist
           #fi
           
           #ls -R dist
           
      - name: Apply Linux Patch
        run: |
         #if [ ${{ github.event.inputs.FEIL }} == "oneplus_ace5_pro"]; then
         #  cd kernel_workspace/kernel_platform/common/out/arch/arm64/boot
         #else
         cd kernel_workspace/kernel_platform/dist/
         #fi
         curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
         chmod +x patch_linux
         ./patch_linux
         rm -f Image
         mv oImage Image
         
      - name: Make AnyKernel3
        env:
          IMG_FILE: "${{ github.event.inputs.FEIL }}_Image_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
          ANYKERNEL3_FILE: "${{ github.event.inputs.FEIL }}_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
        run: |
         git clone https://github.com/HanKuCha/AnyKernel3.git --depth=1      
         rm -rf ./AnyKernel3/.git
         rm -rf ./AnyKernel3/push.sh
         cp kernel_workspace/kernel_platform/dist/Image ./AnyKernel3/
         #if [ ${{ github.event.inputs.FEIL }} == "oneplus_ace5_pro" ]; then
         #   cp kernel_workspace/kernel_platform/dist/dtbo.img ./AnyKernel3/
         #   cp kernel_workspace/kernel_platform/dist/system_dlkm.erofs.img ./AnyKernel3/system_dlkm.img
         #fi
         echo "BUILDDATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
         
      - name: Upload AnyKernel3
        env:
          ANYKERNEL3_FILE: "${{ github.event.inputs.FEIL }}_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
        uses: actions/upload-artifact@v4
        with:
         name: ${{ env.ANYKERNEL3_FILE }}
         path: ./AnyKernel3/*
        
      - name: Upload Image
        env:
          IMG_FILE: "${{ github.event.inputs.FEIL }}_Image_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
        uses: actions/upload-artifact@v4
        with:
         name: ${{ env.IMG_FILE }}
         path: kernel_workspace/kernel_platform/dist/Image

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: download

      - name: Zip AnyKernel3 & Image
        env:
          IMG_FILE: "${{ github.event.inputs.FEIL }}_Image_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
          ANYKERNEL3_FILE: "${{ github.event.inputs.FEIL }}_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
        run: |
           cd download
           # Fengchi Patch for OPAce5Pro
           #if [ ${{ github.event.inputs.FEIL }} == "oneplus_ace5_pro" ]; then
           #  sed -i 's/hmbird/xxbird/g' dtbo.img
           #fi
           cd ${{ env.IMG_FILE }} ; zip -r ../${{ env.IMG_FILE }}.zip . * ; cd ..
           cd ${{ env.ANYKERNEL3_FILE }} ; zip -r ../${{ env.ANYKERNEL3_FILE }}.zip . * ; cd ..
           cp ../kernel_workspace/kernel_platform/dist/boot.img ${{ github.event.inputs.FEIL }}_boot.img
           #ls -R

      - name: 🧧 Create GitHub Release
        env:
          IMG_FILE: "${{ github.event.inputs.FEIL }}_Image_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
          ANYKERNEL3_FILE: "${{ github.event.inputs.FEIL }}_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.ANDROID_VERSION }}_${{ github.event.inputs.KERNEL_VERSION }}-${{ env.BUILDDATE }}"
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.FEIL }}-SukiSU_Ultra-v${{ env.BUILDDATE }}.${{ github.run_number }}
          #files: "${{ env.ANYKERNEL3_FILE }}.zip"
          files: |
            download/*.zip
            download/*.img
          generate_release_notes: true
